From 42849255ec8006612484c35983bc155bd564530b Mon Sep 17 00:00:00 2001
From: "Ross-Ashikyan, William" <washikyan@maxlinear.com>
Date: Wed, 9 Oct 2024 11:23:58 -0700
Subject: [PATCH] WLANRTSYS-84788 Added event loop to bring composite mode out
 of NO_IR into LPI values

Issue: AFC values cannot be preloaded for composite mode because it would
conflict with LPI to SP transition.

Fix: Adding an event loop to load UNII-5/7 LPI after the power mode change
occurs allows us to come back up in LPI even if of AFC request fails.

FIXUP to WLANRTSYS-83162 Ported afcd and composite mode changes from legacy hostapd
---
 hostapd/mxl_ctrl_iface.c |  7 +++++++
 src/ap/mxl_hostapd.c     | 26 +++++++++++++++++++++++++-
 2 files changed, 32 insertions(+), 1 deletion(-)

diff --git a/hostapd/mxl_ctrl_iface.c b/hostapd/mxl_ctrl_iface.c
index 522875ce8..10f9f0913 100644
--- a/hostapd/mxl_ctrl_iface.c
+++ b/hostapd/mxl_ctrl_iface.c
@@ -3575,6 +3575,13 @@ int mxl_hostapd_ctrl_iface_set_power_mode(struct hostapd_iface *iface, const cha
 		return -1;
 	}
 	mxl_hostapd_interface_update_power_regd(hapd, val);
+#ifdef CONFIG_AFC
+	if (val == HE_REG_INFO_6GHZ_AP_TYPE_INDOOR_SP) {
+		/* Apply UNII 5/7 LPI only if moving to Indoor SP */
+		mxl_hostapd_afc_clear_and_load_lpi(iface);
+		mxl_hostap_afc_construct_regrule_from_afc_data(iface);
+	}
+#endif /* CONFIG_AFC */
 
 	return os_snprintf(buf, buflen, "Power Mode=%s\n", mxl_he_6ghz_pwr_mode_text(val));
 }
diff --git a/src/ap/mxl_hostapd.c b/src/ap/mxl_hostapd.c
index a4bc1b26d..1ad05ba68 100644
--- a/src/ap/mxl_hostapd.c
+++ b/src/ap/mxl_hostapd.c
@@ -33,6 +33,9 @@
 #include "common/mxl_ieee802_11_common.h"
 #include "mxl_dfs_common.h"
 #include "dfs.h"
+#ifdef CONFIG_AFC
+#include "mxl_afc.h"
+#endif /* CONFIG_AFC */
 
 #define COC_POWER_1x1_STATE 1
 #define COC_POWER_2x2_STATE 2
@@ -2474,6 +2477,20 @@ const char * mxl_he_6ghz_pwr_mode_text(enum he_reg_info_6ghz_ap_type pwr_mode)
 	}
 }
 
+#ifdef CONFIG_AFC
+static void mxl_check_6ghz_power_mode_composite(void *eloop_data, void *user_ctx)
+{
+	struct hostapd_iface *iface = (struct hostapd_iface *)eloop_data;
+	struct hostapd_data *hapd = iface->bss[0];
+	if (iface->state == HAPD_IFACE_NO_IR) {
+		mxl_hostapd_afc_clear_and_load_lpi(iface);
+		mxl_hostap_afc_construct_regrule_from_afc_data(iface);
+		mxl_hostapd_interface_update_power_regd(hapd, HE_REG_INFO_6GHZ_AP_TYPE_INDOOR_SP);
+	}
+}
+#endif /* CONFIG_AFC */
+
+
 void mxl_check_6ghz_power_mode_fallback(void *eloop_data, void *user_ctx)
 {
 	struct hostapd_iface *iface = (struct hostapd_iface *)eloop_data;
@@ -2507,7 +2524,14 @@ int mxl_hostapd_interface_update_power_regd(struct hostapd_data *hapd, int he_6g
 	if(he_6ghz_pwr_mode == HE_REG_INFO_6GHZ_AP_TYPE_SP)
 		eloop_register_timeout(fallback_timer, 0, mxl_check_6ghz_power_mode_fallback,
 				       hapd->iface, NULL);
-
+#ifdef CONFIG_AFC
+	if(he_6ghz_pwr_mode == HE_REG_INFO_6GHZ_AP_TYPE_INDOOR_SP) {
+#define COMPOSITE_NO_IR_TIMER_IN_SEC 5 /* Composite must pass through NO_IR once before LPI is re-enabled. */
+		fallback_timer = COMPOSITE_NO_IR_TIMER_IN_SEC;
+		eloop_register_timeout(fallback_timer, 0, mxl_check_6ghz_power_mode_composite,
+				       hapd->iface, NULL);
+	}
+#endif /* CONFIG_AFC */
 	return 0;
 }
 
-- 
2.43.0

