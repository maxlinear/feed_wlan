From ee53ea40a57ab5ddf2a8ebfa4f058c155438ae02 Mon Sep 17 00:00:00 2001
From: fromans <fromans@maxlinear.com>
Date: Fri, 23 Feb 2024 13:56:03 +0200
Subject: [PATCH] WLANRTSYS-63689 Protect disassociation frames when PMF is
 enabled

---
 src/ap/ctrl_iface_ap.c |  5 +++++
 src/ap/mxl_hostapd.c   | 48 ++++++++++++++++++++++++++++++++++++++++++
 src/ap/mxl_hostapd.h   |  1 +
 3 files changed, 54 insertions(+)

diff --git a/src/ap/ctrl_iface_ap.c b/src/ap/ctrl_iface_ap.c
index ab8cf50c6..8f93727ee 100644
--- a/src/ap/ctrl_iface_ap.c
+++ b/src/ap/ctrl_iface_ap.c
@@ -720,6 +720,11 @@ int hostapd_ctrl_iface_disassociate(struct hostapd_data *hapd,
 
 	if (os_strstr(txtaddr, " tx=0"))
 		hostapd_drv_sta_remove(hapd, addr);
+#ifdef CONFIG_VENDOR_MXL
+	else if (is_broadcast_ether_addr(addr) &&
+		(hapd->wpa_auth) && (hapd->conf->ieee80211w != NO_MGMT_FRAME_PROTECTION))
+		mxl_hostapd_send_protected_disassoc(hapd, reason);
+#endif /* CONFIG_VENDOR_MXL */
 	else
 		hostapd_drv_sta_disassoc(hapd, addr, reason);
 	sta = ap_get_sta(hapd, addr);
diff --git a/src/ap/mxl_hostapd.c b/src/ap/mxl_hostapd.c
index 3d0a0d4b0..485797cff 100644
--- a/src/ap/mxl_hostapd.c
+++ b/src/ap/mxl_hostapd.c
@@ -2487,3 +2487,51 @@ int mxl_hostapd_send_protected_deauth(struct hostapd_data *hapd, int reason)
 	os_free(mgmt_frame_buf_t);
 	return 1;
 }
+
+#define MXL_UNPROTECTED_DISASSOC_FRAME_LEN   (24+2)
+#define MXL_MAX_PROTECTED_DISASSOC_FRAME_LEN (24+2+18)
+_Static_assert(
+	MXL_UNPROTECTED_DISASSOC_FRAME_LEN == offsetof(struct ieee80211_mgmt, u.disassoc.variable),
+	"Disassoc frame length macro does not match structure size"
+);
+
+int mxl_hostapd_send_protected_disassoc(struct hostapd_data *hapd, int reason)
+{
+	errno_t err;
+	size_t len = MXL_UNPROTECTED_DISASSOC_FRAME_LEN, plen = len;
+	struct ieee80211_mgmt mgmt;
+	u8 *mgmt_frame_buf_t = NULL;
+	u8 mgmt_frame_buf[MXL_MAX_PROTECTED_DISASSOC_FRAME_LEN];
+
+	memset(&mgmt, 0, sizeof(struct ieee80211_mgmt));
+	mgmt.frame_control = IEEE80211_FC(WLAN_FC_TYPE_MGMT, WLAN_FC_STYPE_DISASSOC);
+	os_memset(mgmt.da, 0xff, ETH_ALEN);
+	err = memcpy_s(mgmt.sa, sizeof(mgmt.sa), hapd->own_addr, sizeof(hapd->own_addr));
+	if (EOK != err) {
+		wpa_printf(MSG_ERROR, "%s: memcpy_s error %d", __func__, err);
+		return 0;
+	}
+	err = memcpy_s(mgmt.bssid, sizeof(mgmt.bssid), hapd->own_addr, sizeof(hapd->own_addr));
+	if (EOK != err) {
+		wpa_printf(MSG_ERROR, "%s: memcpy_s error %d", __func__, err);
+		return 0;
+	}
+	mgmt.u.disassoc.reason_code = host_to_le16(reason);
+	mgmt_frame_buf_t = bip_protect(hapd->wpa_auth, (u8 *)&mgmt, len, &plen, hapd->iface->mxl_iface.stas_free_reason);
+	if (mgmt_frame_buf_t == NULL) {
+		wpa_printf(MSG_ERROR, "bip_protect error");
+		return 0;
+	}
+
+	err = memcpy_s(mgmt_frame_buf, MXL_MAX_PROTECTED_DISASSOC_FRAME_LEN, mgmt_frame_buf_t, plen);
+	if (EOK != err) {
+		wpa_printf(MSG_ERROR, "%s: memcpy_s error %d", __func__, err);
+		os_free(mgmt_frame_buf_t);
+		return 0;
+	}
+
+	hostapd_drv_send_mlme(hapd, (u8 *) mgmt_frame_buf, plen, 0, NULL, 0, 0);
+
+	os_free(mgmt_frame_buf_t);
+	return 1;
+}
diff --git a/src/ap/mxl_hostapd.h b/src/ap/mxl_hostapd.h
index 4dfea63fe..a35694546 100644
--- a/src/ap/mxl_hostapd.h
+++ b/src/ap/mxl_hostapd.h
@@ -201,4 +201,5 @@ int mxl_hostapd_remove_bss(struct hostapd_iface *iface, unsigned int idx);
 void mxl_hostapd_clear_drv_priv(struct hostapd_data *hapd);
 int mxl_update_rnr_check(struct hostapd_iface *iface);
 int mxl_hostapd_send_protected_deauth(struct hostapd_data *hapd, int reason);
+int mxl_hostapd_send_protected_disassoc(struct hostapd_data *hapd, int reason);
 #endif /* MXL_HOSTAPD_H */
-- 
2.43.0

