From 9e0c693e0d07a11f01aa9619cf39de96caaa9443 Mon Sep 17 00:00:00 2001
From: Dmitrijs Martinovs <dmartinovs@maxlinear.com>
Date: Tue, 20 Jun 2023 14:54:56 +0200
Subject: [PATCH] WLANRTSYS-56333: Implement testbed mode

---
 hostapd/config_file.c | 11 ++++++++---
 src/ap/ap_config.c    | 10 +++++-----
 src/ap/ap_config.h    |  2 ++
 src/ap/hostapd.c      |  7 +++++++
 4 files changed, 22 insertions(+), 8 deletions(-)

diff --git a/hostapd/config_file.c b/hostapd/config_file.c
index ad079fff9..5bc817634 100644
--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -2888,6 +2888,14 @@ static int hostapd_config_fill(struct hostapd_config *conf,
 		}
 		bss->eapol_version = eapol_version;
 		wpa_printf(MSG_DEBUG, "eapol_version=%d", bss->eapol_version);
+	} else if (os_strcmp(buf, "testbed_mode") == 0) {
+		int val = atoi(pos);
+		if (!IS_VALID_BOOL_RANGE(val)) {
+			wpa_printf(MSG_ERROR, "Line %d: invalid testbed_mode %d",
+				line, val);
+			return 1;
+		}
+		conf->testbed_mode = val;
 #ifdef EAP_SERVER
 	} else if (os_strcmp(buf, "eap_authenticator") == 0) {
 		bss->eap_server = atoi(pos);
@@ -5679,8 +5687,6 @@ static int hostapd_config_fill(struct hostapd_config *conf,
 		}
 		conf->owl = val;
 	} else if (os_strcmp(buf, "wpa_ie_required_for_mbss") == 0) {
-	/* todo: testbed_mode */
-#if 0
 		/* This is valid for Non-transmit BSS (MultiBSS scenario).
 		 * if this is set, Non transmit BSS will always carry Security IE (RSN/RSNX/WPA) etc.
 		 * irrespective of Security method is same as it's Transmit BSS or not.
@@ -5693,7 +5699,6 @@ static int hostapd_config_fill(struct hostapd_config *conf,
 				return 1;
 		}
 		bss->wpa_ie_required_for_mbss = val;
-#endif
 #ifdef CONFIG_IEEE80211AX
 	} else if (os_strcmp(buf, "btwt_config_enable") == 0) {
 		int val = atoi(pos);
diff --git a/src/ap/ap_config.c b/src/ap/ap_config.c
index f230ed2c2..f4aa074de 100644
--- a/src/ap/ap_config.c
+++ b/src/ap/ap_config.c
@@ -1418,7 +1418,7 @@ static int hostapd_config_check_bss(struct hostapd_bss_config *bss,
 #endif /* CONFIG_IEEE80211R_AP */
 
 	if (full_config && conf->ieee80211n &&
-	    conf->hw_mode == HOSTAPD_MODE_IEEE80211B) {
+	    conf->hw_mode == HOSTAPD_MODE_IEEE80211B && !conf->testbed_mode) {
 		bss->disable_11n = true;
 		wpa_printf(MSG_ERROR, "HT (IEEE 802.11n) in 11b mode is not "
 			   "allowed, disabling HT capabilities");
@@ -1426,7 +1426,7 @@ static int hostapd_config_check_bss(struct hostapd_bss_config *bss,
 
 #ifdef CONFIG_WEP
 	if (full_config && conf->ieee80211n &&
-	    bss->ssid.security_policy == SECURITY_STATIC_WEP) {
+	    bss->ssid.security_policy == SECURITY_STATIC_WEP && !conf->testbed_mode) {
 		bss->disable_11n = true;
 		wpa_printf(MSG_ERROR, "HT (IEEE 802.11n) with WEP is not "
 			   "allowed, disabling HT capabilities");
@@ -1436,7 +1436,7 @@ static int hostapd_config_check_bss(struct hostapd_bss_config *bss,
 	if (full_config && conf->ieee80211n && bss->wpa &&
 	    !(bss->wpa_pairwise & WPA_CIPHER_CCMP) &&
 	    !(bss->rsn_pairwise & (WPA_CIPHER_CCMP | WPA_CIPHER_GCMP |
-				   WPA_CIPHER_CCMP_256 | WPA_CIPHER_GCMP_256)))
+				   WPA_CIPHER_CCMP_256 | WPA_CIPHER_GCMP_256)) && !conf->testbed_mode)
 	{
 		bss->disable_11n = true;
 		wpa_printf(MSG_ERROR, "HT (IEEE 802.11n) with WPA/WPA2 "
@@ -1447,7 +1447,7 @@ static int hostapd_config_check_bss(struct hostapd_bss_config *bss,
 #ifdef CONFIG_IEEE80211AC
 #ifdef CONFIG_WEP
 	if (full_config && (conf->ieee80211ac || bss->vendor_vht) &&
-	    bss->ssid.security_policy == SECURITY_STATIC_WEP) {
+	    bss->ssid.security_policy == SECURITY_STATIC_WEP  && !conf->testbed_mode) {
 		bss->disable_11ac = true;
 		wpa_printf(MSG_ERROR,
 			   "VHT (IEEE 802.11ac) with WEP is not allowed, disabling VHT capabilities");
@@ -1467,7 +1467,7 @@ static int hostapd_config_check_bss(struct hostapd_bss_config *bss,
 
 #ifdef CONFIG_IEEE80211AX
 #ifdef CONFIG_WEP
-	if (full_config && conf->ieee80211ax &&
+	if (full_config && conf->ieee80211ax && !conf->testbed_mode &&
 	    bss->ssid.security_policy == SECURITY_STATIC_WEP) {
 		bss->disable_11ax = true;
 		wpa_printf(MSG_ERROR,
diff --git a/src/ap/ap_config.h b/src/ap/ap_config.h
index 1f7bd033b..77f311500 100644
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -1366,6 +1366,8 @@ struct hostapd_config {
 #define CH_SWITCH_VHT_DISABLED BIT(1)
 	unsigned int ch_switch_vht_config;
 
+	int testbed_mode;
+
 	/* HE enable/disable config from CHAN_SWITCH */
 #define CH_SWITCH_HE_ENABLED BIT(0)
 #define CH_SWITCH_HE_DISABLED BIT(1)
diff --git a/src/ap/hostapd.c b/src/ap/hostapd.c
index 8576d46e9..f290e1933 100644
--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -5225,6 +5225,13 @@ int hostapd_switch_channel(struct hostapd_data *hapd,
 		return 0;
 	}
 
+	/* TODO - Update secondary channel offset properly
+	 * for all other cases such as APUT tests
+	 */
+	if (hapd->iconf->testbed_mode) {
+		settings->freq_params.sec_channel_offset = hapd->iconf->secondary_channel;
+	}
+
 	ret = hostapd_fill_csa_settings(hapd, settings);
 	if (ret)
 		return ret;
-- 
2.43.0

