From 833861da11606168e05c7b79dd4d36b8dbd021b2 Mon Sep 17 00:00:00 2001
From: Dmitrijs Martinovs <dmartinovs@maxlinear.com>
Date: Mon, 25 Sep 2023 10:40:38 +0300
Subject: [PATCH] WLANRTSYS-58355: Implement support of DPP/EasyConnect

---
 hostapd/ctrl_iface.c  |  4 +++-
 hostapd/main.c        |  1 +
 src/ap/ap_config.h    |  9 +++++++++
 src/ap/dpp_hostapd.c  | 15 ++++++++++++++-
 src/ap/dpp_hostapd.h  |  1 +
 src/ap/gas_query_ap.c | 13 +++++++++----
 src/ap/hostapd.h      |  6 ++++++
 7 files changed, 43 insertions(+), 6 deletions(-)

diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index e8becdced..6fab569f7 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -1422,7 +1422,9 @@ static int hostapd_ctrl_iface_set(struct hostapd_data *hapd, char *cmd)
 		ret = hostapd_set_iface(hapd->iconf, hapd->conf, cmd, value);
 		if (ret)
 			return ret;
-
+#ifdef CONFIG_DPP
+		hostapd_dpp_reload_timeouts(hapd);
+#endif
 		if (os_strcasecmp(cmd, "deny_mac_file") == 0) {
 			hostapd_disassoc_deny_mac(hapd);
 		} else if (os_strcasecmp(cmd, "accept_mac_file") == 0) {
diff --git a/hostapd/main.c b/hostapd/main.c
index f82fdffcf..a56ba7c56 100644
--- a/hostapd/main.c
+++ b/hostapd/main.c
@@ -323,6 +323,7 @@ setup_mld:
 		for (i = 0; i < hapd->iface->num_bss; i++) {
 			iface->conf->bss[i]->max_num_sta = MIN(capa.max_stations, iface->conf->bss[i]->max_num_sta);
 		}
+		iface->max_remain_on_chan = capa.max_remain_on_chan;
 		/*
 		 * Use default extended capa values from per-radio information
 		 */
diff --git a/src/ap/ap_config.h b/src/ap/ap_config.h
index 31b61c9b8..d3623fc5e 100644
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -858,6 +858,15 @@ struct hostapd_bss_config {
 	struct wpabuf *dpp_netaccesskey;
 	unsigned int dpp_netaccesskey_expiry;
 	struct wpabuf *dpp_csign;
+
+	/* Timeouts. Copied from hostapd_data */
+	unsigned int dpp_init_max_tries;
+	unsigned int dpp_init_retry_time;
+	unsigned int dpp_resp_wait_time;
+	unsigned int dpp_resp_max_tries;
+	unsigned int dpp_resp_retry_time;
+	unsigned int dpp_gas_query_timeout_period;
+
 #ifdef CONFIG_DPP2
 	struct dpp_controller_conf *dpp_controller;
 	int dpp_relay_port;
diff --git a/src/ap/dpp_hostapd.c b/src/ap/dpp_hostapd.c
index 1fee2d6a8..034ff5ec6 100644
--- a/src/ap/dpp_hostapd.c
+++ b/src/ap/dpp_hostapd.c
@@ -1818,7 +1818,7 @@ hostapd_dpp_rx_reconfig_announcement(struct hostapd_data *hapd, const u8 *src,
 
 	hapd->dpp_in_response_listen = 0;
 	hapd->dpp_auth_ok_on_ack = 0;
-	wait_time = 2000; /* TODO: hapd->max_remain_on_chan; */
+	wait_time = hapd->iface->max_remain_on_chan;
 	max_wait_time = hapd->dpp_resp_wait_time ?
 		hapd->dpp_resp_wait_time : 2000;
 	if (wait_time > max_wait_time)
@@ -3412,6 +3412,15 @@ static int hostapd_dpp_add_controllers(struct hostapd_data *hapd)
 	return 0;
 }
 
+void hostapd_dpp_reload_timeouts(struct hostapd_data *hapd)
+{
+	hapd->dpp_init_max_tries = hapd->conf->dpp_init_max_tries;
+	hapd->dpp_init_retry_time = hapd->conf->dpp_init_retry_time;
+	hapd->dpp_resp_wait_time = hapd->conf->dpp_resp_wait_time;
+	hapd->dpp_resp_max_tries = hapd->conf->dpp_resp_max_tries;
+	hapd->dpp_resp_retry_time = hapd->conf->dpp_resp_retry_time;
+	hapd->dpp_gas_query_timeout_period = hapd->conf->dpp_gas_query_timeout_period;
+}
 
 #ifdef CONFIG_DPP2
 
@@ -3476,6 +3485,10 @@ int hostapd_dpp_init(struct hostapd_data *hapd)
 {
 	hapd->dpp_allowed_roles = DPP_CAPAB_CONFIGURATOR | DPP_CAPAB_ENROLLEE;
 	hapd->dpp_init_done = 1;
+
+	/* Copy timeouts from the "config" structure */
+	hostapd_dpp_reload_timeouts(hapd);
+
 	return hostapd_dpp_add_controllers(hapd);
 }
 
diff --git a/src/ap/dpp_hostapd.h b/src/ap/dpp_hostapd.h
index 55f1fce22..83424d092 100644
--- a/src/ap/dpp_hostapd.h
+++ b/src/ap/dpp_hostapd.h
@@ -36,6 +36,7 @@ int hostapd_dpp_configurator_get_key(struct hostapd_data *hapd, unsigned int id,
 int hostapd_dpp_pkex_add(struct hostapd_data *hapd, const char *cmd);
 int hostapd_dpp_pkex_remove(struct hostapd_data *hapd, const char *id);
 void hostapd_dpp_stop(struct hostapd_data *hapd);
+void hostapd_dpp_reload_timeouts(struct hostapd_data *hapd);
 int hostapd_dpp_init(struct hostapd_data *hapd);
 void hostapd_dpp_deinit(struct hostapd_data *hapd);
 void hostapd_dpp_init_global(struct hapd_interfaces *ifaces);
diff --git a/src/ap/gas_query_ap.c b/src/ap/gas_query_ap.c
index 3d944072d..02ebde854 100644
--- a/src/ap/gas_query_ap.c
+++ b/src/ap/gas_query_ap.c
@@ -75,7 +75,7 @@ static void gas_query_tx_initial_req(struct gas_query_ap *gas,
 				     struct gas_query_pending *query);
 static int gas_query_new_dialog_token(struct gas_query_ap *gas, const u8 *dst);
 
-
+#ifndef CONFIG_NO_STDOUT_DEBUG
 static int ms_from_time(struct os_reltime *last)
 {
 	struct os_reltime now, res;
@@ -84,7 +84,7 @@ static int ms_from_time(struct os_reltime *last)
 	os_reltime_sub(&now, last, &res);
 	return res.sec * 1000 + res.usec / 1000;
 }
-
+#endif
 
 /**
  * gas_query_ap_init - Initialize GAS query component
@@ -209,7 +209,9 @@ void gas_query_ap_tx_status(struct gas_query_ap *gas, const u8 *dst,
 			    const u8 *data, size_t data_len, int ok)
 {
 	struct gas_query_pending *query;
+#ifndef CONFIG_NO_STDOUT_DEBUG
 	int dur;
+#endif
 
 	if (!gas || !gas->current) {
 		wpa_printf(MSG_DEBUG, "GAS: Unexpected TX status: dst=" MACSTR
@@ -218,8 +220,9 @@ void gas_query_ap_tx_status(struct gas_query_ap *gas, const u8 *dst,
 	}
 
 	query = gas->current;
-
+#ifndef CONFIG_NO_STDOUT_DEBUG
 	dur = ms_from_time(&query->last_oper);
+#endif
 	wpa_printf(MSG_DEBUG, "GAS: TX status: dst=" MACSTR
 		   " ok=%d query=%p dialog_token=%u dur=%d ms",
 		   MAC2STR(dst), ok, query, query->dialog_token, dur);
@@ -235,7 +238,9 @@ void gas_query_ap_tx_status(struct gas_query_ap *gas, const u8 *dst,
 		eloop_register_timeout(0, 250000, gas_query_timeout,
 				       gas, query);
 	} else {
-		eloop_register_timeout(GAS_QUERY_TIMEOUT_PERIOD, 0,
+		unsigned int gas_query_timeout_period = gas->hapd->dpp_gas_query_timeout_period ?
+			gas->hapd->dpp_gas_query_timeout_period : GAS_QUERY_TIMEOUT_PERIOD;
+		eloop_register_timeout(gas_query_timeout_period, 0,
 				       gas_query_timeout, gas, query);
 	}
 	if (query->wait_comeback && !query->retry) {
diff --git a/src/ap/hostapd.h b/src/ap/hostapd.h
index 9aff6caa3..bb276fca6 100644
--- a/src/ap/hostapd.h
+++ b/src/ap/hostapd.h
@@ -477,6 +477,7 @@ struct hostapd_data {
 	unsigned int dpp_resp_wait_time;
 	unsigned int dpp_resp_max_tries;
 	unsigned int dpp_resp_retry_time;
+	unsigned int dpp_gas_query_timeout_period;
 #ifdef CONFIG_DPP2
 	struct wpabuf *dpp_presence_announcement;
 	struct dpp_bootstrap_info *dpp_chirp_bi;
@@ -603,6 +604,11 @@ struct hostapd_iface {
 	 */
 	unsigned int probe_resp_offloads;
 
+	/**
+	 * max_remain_on_chan - Maximum remain-on-channel duration in msec
+	 */
+	unsigned int max_remain_on_chan;
+
 	/* extended capabilities supported by the driver */
 	const u8 *extended_capa, *extended_capa_mask;
 	unsigned int extended_capa_len;
-- 
2.43.0

