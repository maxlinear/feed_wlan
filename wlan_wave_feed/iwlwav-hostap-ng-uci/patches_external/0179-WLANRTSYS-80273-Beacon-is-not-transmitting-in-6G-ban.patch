From 32563dfd4a6f3f2455471f027fd884a8b5d62435 Mon Sep 17 00:00:00 2001
From: Venkatasaiprudhvi Sannidhi <vsannidhi@maxlinear.com>
Date: Tue, 30 Jul 2024 22:38:31 +0530
Subject: [PATCH] WLANRTSYS-80273 Beacon is not transmitting in 6G band, when
 the single Multivap is created, need to provide 'wifi' twice

Root cause:  When transmitting VAP is an ML VAP, the set_beacon for transmitting VAP is withheld and configured later along with sibling hapd.
Hence non transmitting VAPs are configured first followed by the transmit VAP which is not expected which is leading to beacon transmission failure.

Fix: Check if the transmitting VAP is part of an MLD, in such a case configure the non transmit VAPs only after the transmitting VAP is configured.

Unit test: Pass

FIXUP to WLANRTSYS-60843 MLO changes: AP MLD configuration
---
 src/ap/hostapd.c     | 30 ++++++++++++++++++++++++++++++
 src/ap/mxl_hostapd.h |  1 +
 src/ap/mxl_mld.c     |  3 +++
 3 files changed, 34 insertions(+)

diff --git a/src/ap/hostapd.c b/src/ap/hostapd.c
index d2bb4cf63..8db4d83ee 100644
--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -1489,8 +1489,16 @@ static int hostapd_start_beacon(struct hostapd_data *hapd,
 	struct hostapd_bss_config *conf = hapd->conf;
 
 #ifdef CONFIG_IEEE80211BE_MXL_MLO
+	struct hostapd_data *hapd_mbss_tx_vap = NULL;
+
 	if (mxl_is_mlo_enabled(conf))
 		return 0;
+
+	if (hapd->iconf->multibss_enable) {
+		hapd_mbss_tx_vap = hapd->iface->bss[MULTIBSS_REFERENCE_BSS_IDX];
+		if (mxl_is_mlo_enabled(hapd_mbss_tx_vap->conf))
+			return 0;
+	}
 #endif /* CONFIG_IEEE80211BE_MXL_MLO */
 	if (!conf->start_disabled && ieee802_11_set_beacon(hapd) < 0)
 		return -1;
@@ -3217,6 +3225,10 @@ static int hostapd_setup_interface_complete_sync(struct hostapd_iface *iface,
 	struct hostapd_channel_data *channel;
 	struct hostapd_hw_modes *cmode = hapd->iface->current_mode;
 
+#ifdef CONFIG_IEEE80211BE_MXL_MLO
+	struct hostapd_data *hapd_mbss_tx_vap = NULL;
+#endif /* CONFIG_IEEE80211BE_MXL_MLO */
+
 	if (err)
 		goto fail;
 
@@ -3444,6 +3456,19 @@ static int hostapd_setup_interface_complete_sync(struct hostapd_iface *iface,
 #ifdef CONFIG_IEEE80211BE_MXL_MLO
 	if(mxl_mld_setup_interfaces(iface->interfaces))
 		goto fail;
+
+	if (hapd->iconf->multibss_enable) {
+		hapd_mbss_tx_vap = hapd->iface->bss[MULTIBSS_REFERENCE_BSS_IDX];
+		if (mxl_is_mlo_enabled(hapd_mbss_tx_vap->conf)) {
+			for (j = 0; j < iface->num_bss; j++) {
+				hapd = iface->bss[j];
+				if (!mxl_is_mlo_enabled(hapd->conf) && hapd->conf->bss_idx != MULTIBSS_REFERENCE_BSS_IDX) {
+					ieee802_11_set_beacon(hapd);
+					hostapd_flush_old_stations(hapd, WLAN_REASON_PREV_AUTH_NOT_VALID);
+				}
+			}
+		}
+	}
 #endif /* CONFIG_IEEE80211BE_MXL_MLO */
 
 	hostapd_tx_queue_params(hapd);
@@ -6153,4 +6178,9 @@ void mxl_hostapd_clear_drv_priv(struct hostapd_data *hapd)
 {
 	return hostapd_clear_drv_priv(hapd);
 }
+
+int mxl_hostapd_flush_old_stations(struct hostapd_data *hapd, u16 reason)
+{
+	return hostapd_flush_old_stations(hapd, reason);
+}
 #endif /* CONFIG_VENDOR_MXL */
diff --git a/src/ap/mxl_hostapd.h b/src/ap/mxl_hostapd.h
index 52844ed34..2c4bf8b18 100644
--- a/src/ap/mxl_hostapd.h
+++ b/src/ap/mxl_hostapd.h
@@ -226,6 +226,7 @@ void mxl_channel_list_update_timeout(void *eloop_ctx, void *timeout_ctx);
 void mxl_hostapd_bss_deinit(struct hostapd_data *hapd);
 int mxl_hostapd_remove_bss(struct hostapd_iface *iface, unsigned int idx);
 void mxl_hostapd_clear_drv_priv(struct hostapd_data *hapd);
+int mxl_hostapd_flush_old_stations(struct hostapd_data *hapd, u16 reason);
 int mxl_update_rnr_check(struct hostapd_iface *iface);
 int mxl_hostapd_send_protected_deauth(struct hostapd_data *hapd, int reason);
 int mxl_hostapd_send_protected_disassoc(struct hostapd_data *hapd, int reason);
diff --git a/src/ap/mxl_mld.c b/src/ap/mxl_mld.c
index 17077da67..fd7ea08ba 100644
--- a/src/ap/mxl_mld.c
+++ b/src/ap/mxl_mld.c
@@ -277,6 +277,9 @@ static int mxl_setup_link(struct p_ap_mld *mld)
 	if (ret < 0)
 		goto err;
 
+	mxl_hostapd_flush_old_stations(link1, WLAN_REASON_PREV_AUTH_NOT_VALID);
+	mxl_hostapd_flush_old_stations(link2, WLAN_REASON_PREV_AUTH_NOT_VALID);
+
 	if (link1->iconf->multibss_enable && (MULTIBSS_REFERENCE_BSS_IDX != link1->conf->bss_idx)) {
 		hapd = link1->iface->bss[MULTIBSS_REFERENCE_BSS_IDX];
 		ieee802_11_set_beacon(hapd);
-- 
2.43.0

