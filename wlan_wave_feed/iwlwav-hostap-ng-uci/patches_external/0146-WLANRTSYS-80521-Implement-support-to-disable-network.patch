From 9e7ced76f33b48323322e91637444c983c63c25a Mon Sep 17 00:00:00 2001
From: Mikelis Vuls <mvuls@maxlinear.com>
Date: Tue, 23 Apr 2024 10:25:13 +0300
Subject: [PATCH] WLANRTSYS-80521 Implement support to disable network modes
 via global configuration

Signed-off-by: Mikelis Vuls <mvuls@maxlinear.com>
---
 wpa_supplicant/config.c         | 10 ++++++++++
 wpa_supplicant/config.h         | 10 ++++++++++
 wpa_supplicant/mxl_supplicant.c | 25 +++++++++++++++++++++++++
 wpa_supplicant/mxl_supplicant.h |  2 ++
 wpa_supplicant/op_classes.c     |  7 +++++++
 wpa_supplicant/sme.c            |  6 ++++++
 wpa_supplicant/wpa_supplicant.c |  5 +++++
 7 files changed, 65 insertions(+)

diff --git a/wpa_supplicant/config.c b/wpa_supplicant/config.c
index 4557659ee..ed13dff6d 100644
--- a/wpa_supplicant/config.c
+++ b/wpa_supplicant/config.c
@@ -5551,6 +5551,16 @@ static const struct global_parse_data global_fields[] = {
 	{ INT_RANGE(preassoc_mac_addr, 0, 2), 0 },
 #ifdef CONFIG_VENDOR_MXL
 	MXL_GLOBAL_FIELDS
+#ifdef CONFIG_HT_OVERRIDES
+	{ INT_RANGE(disable_ht,  0, 1), 0 },
+#endif /* CONFIG_HT_OVERRIDES */
+#ifdef CONFIG_VHT_OVERRIDES
+	{ INT_RANGE(disable_vht, 0, 1), 0 },
+#endif /* CONFIG_VHT_OVERRIDES */
+#ifdef CONFIG_HE_OVERRIDES
+	{ INT_RANGE(disable_he,  0, 1), 0 },
+#endif /* CONFIG_HE_OVERRIDES */
+	{ INT_RANGE(disable_eht, 0, 1), 0 },
 #endif /* CONFIG_VENDOR_MXL */
 	{ INT(key_mgmt_offload), 0},
 	{ INT(passive_scan), 0 },
diff --git a/wpa_supplicant/config.h b/wpa_supplicant/config.h
index 71646a252..649c2c309 100644
--- a/wpa_supplicant/config.h
+++ b/wpa_supplicant/config.h
@@ -1433,6 +1433,16 @@ struct wpa_config {
 
 #ifdef CONFIG_VENDOR_MXL
 	int process_radar_slave_events;
+#ifdef CONFIG_HT_OVERRIDES
+	int disable_ht;
+#endif /* CONFIG_HT_OVERRIDES */
+#ifdef CONFIG_VHT_OVERRIDES
+	int disable_vht;
+#endif /* CONFIG_VHT_OVERRIDES */
+#ifdef CONFIG_HE_OVERRIDES
+	int disable_he;
+#endif /* CONFIG_HE_OVERRIDES */
+	int disable_eht;
 #endif /* CONFIG_VENDOR_MXL */
 
 	/**
diff --git a/wpa_supplicant/mxl_supplicant.c b/wpa_supplicant/mxl_supplicant.c
index bb10cdd26..21852ea5b 100644
--- a/wpa_supplicant/mxl_supplicant.c
+++ b/wpa_supplicant/mxl_supplicant.c
@@ -20,6 +20,7 @@
 #include "common/ieee802_11_defs.h"
 #include "common/ieee802_11_common.h"
 #include "common/mxl_ieee802_11_common.h"
+#include "config.h"
 #include "ap/mxl_hostapd.h"
 #include "mxl_supplicant.h"
 #include "driver_i.h"
@@ -72,3 +73,27 @@ out:
 	wpabuf_free(rsp);
 	return ret;
 }
+
+void mxl_supplicant_override_network_modes(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid)
+{
+	if (!ssid)
+		return;
+
+#ifdef CONFIG_HT_OVERRIDES
+	if (wpa_s->conf->disable_ht)
+		ssid->disable_ht = 1;
+#endif /* CONFIG_HT_OVERRIDES */
+
+#ifdef CONFIG_VHT_OVERRIDES
+	if (wpa_s->conf->disable_vht)
+		ssid->disable_vht = 1;
+#endif /* CONFIG_VHT_OVERRIDES */
+
+#ifdef CONFIG_HE_OVERRIDES
+	if (wpa_s->conf->disable_he)
+		ssid->disable_he = 1;
+#endif /* CONFIG_HE_OVERRIDES */
+
+	if (wpa_s->conf->disable_eht)
+		ssid->disable_eht = 1;
+}
diff --git a/wpa_supplicant/mxl_supplicant.h b/wpa_supplicant/mxl_supplicant.h
index 04a62f48c..aea6dfd28 100644
--- a/wpa_supplicant/mxl_supplicant.h
+++ b/wpa_supplicant/mxl_supplicant.h
@@ -25,4 +25,6 @@ int mxl_supplicant_drv_get_vendor_data(struct wpa_supplicant *wpa_s,
 #define MXL_SUPP_DRV_VENDOR_GET(cmd__, in_ptr__, in_size__, out_ptr__, out_size__) \
 	mxl_supplicant_drv_get_vendor_data(wpa_s, OUI_LTQ, (cmd__), (void*)(in_ptr__), (in_size__), (void*)(out_ptr__), (out_size__))
 
+void mxl_supplicant_override_network_modes(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid);
+
 #endif
diff --git a/wpa_supplicant/op_classes.c b/wpa_supplicant/op_classes.c
index b4ad3caef..d0c1071ef 100644
--- a/wpa_supplicant/op_classes.c
+++ b/wpa_supplicant/op_classes.c
@@ -15,6 +15,9 @@
 #include "common/ieee802_11_common.h"
 #include "wpa_supplicant_i.h"
 #include "bss.h"
+#ifdef CONFIG_VENDOR_MXL
+#include "mxl_supplicant.h"
+#endif /* CONFIG_VENDOR_MXL */
 
 
 static enum chan_allowed allow_channel(struct hostapd_hw_modes *mode,
@@ -281,6 +284,10 @@ static int wpas_op_class_supported(struct wpa_supplicant *wpa_s,
 	if (op_class->op_class >= 81 && op_class->op_class <= 84 && !freq2)
 		return 0;
 
+#ifdef CONFIG_VENDOR_MXL
+	mxl_supplicant_override_network_modes(wpa_s, ssid);
+#endif /* CONFIG_VENDOR_MXL */
+
 #ifdef CONFIG_HT_OVERRIDES
 	if (ssid && ssid->disable_ht) {
 		switch (op_class->op_class) {
diff --git a/wpa_supplicant/sme.c b/wpa_supplicant/sme.c
index ce6059260..2db4b3198 100644
--- a/wpa_supplicant/sme.c
+++ b/wpa_supplicant/sme.c
@@ -32,6 +32,9 @@
 #include "scan.h"
 #include "sme.h"
 #include "hs20_supplicant.h"
+#ifdef CONFIG_VENDOR_MXL
+#include "mxl_supplicant.h"
+#endif /* CONFIG_VENDOR_MXL */
 
 #define SME_AUTH_TIMEOUT 5
 #define SME_ASSOC_TIMEOUT 5
@@ -2449,6 +2452,9 @@ mscs_fail:
 	params.mgmt_group_suite = wpa_s->mgmt_group_cipher;
 	params.key_mgmt_suite = wpa_s->key_mgmt;
 	params.wpa_proto = wpa_s->wpa_proto;
+#ifdef CONFIG_VENDOR_MXL
+	mxl_supplicant_override_network_modes(wpa_s, ssid);
+#endif /* CONFIG_VENDOR_MXL */
 #ifdef CONFIG_HT_OVERRIDES
 	os_memset(&htcaps, 0, sizeof(htcaps));
 	os_memset(&htcaps_mask, 0, sizeof(htcaps_mask));
diff --git a/wpa_supplicant/wpa_supplicant.c b/wpa_supplicant/wpa_supplicant.c
index 2babba1c4..16d516727 100644
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -71,6 +71,7 @@
 #endif /* CONFIG_MESH */
 #ifdef CONFIG_VENDOR_MXL
 #include "common/mxl_ieee802_11_common.h"
+#include "mxl_supplicant.h"
 #endif
 
 const char *const wpa_supplicant_version =
@@ -4473,6 +4474,10 @@ static void wpas_start_assoc_cb(struct wpa_radio_work *work, int deinit)
 	else
 		params.uapsd = -1;
 
+#ifdef CONFIG_VENDOR_MXL
+	mxl_supplicant_override_network_modes(wpa_s, ssid);
+#endif /* CONFIG_VENDOR_MXL */
+
 #ifdef CONFIG_HT_OVERRIDES
 	os_memset(&htcaps, 0, sizeof(htcaps));
 	os_memset(&htcaps_mask, 0, sizeof(htcaps_mask));
-- 
2.43.0

