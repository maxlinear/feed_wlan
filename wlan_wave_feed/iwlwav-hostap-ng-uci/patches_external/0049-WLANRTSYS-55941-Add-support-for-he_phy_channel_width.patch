From 303cd0fdd84fcababf85efde62094e18555527ed Mon Sep 17 00:00:00 2001
From: Jurijs Soloveckis <jsoloveckis@maxlinear.com>
Date: Fri, 9 Jun 2023 09:04:57 +0200
Subject: [PATCH] WLANRTSYS-55941: Add support for he_phy_channel_width_set

---
 hostapd/config_file.c |   2 +
 hostapd/ctrl_iface.c  | 101 ++++++++++++++++++++++++++++++++++++++++++
 hostapd/hostapd_cli.c |  22 +++++++++
 3 files changed, 125 insertions(+)

diff --git a/hostapd/config_file.c b/hostapd/config_file.c
index 0749f8d03..09fa1fd24 100644
--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -5532,6 +5532,8 @@ static int hostapd_config_fill(struct hostapd_config *conf,
 			return 1;
 		}
 		conf->ext_cap_max_num_msdus_in_amsdu = (u8)val;
+	} else if (os_strcmp(buf, "he_phy_channel_width_set") == 0) {
+		wpa_printf(MSG_WARNING, "Line %d: he_phy_channel_width_set is deprecated and will be removed soon", line);
 #ifdef CONFIG_VENDOR_MXL
 	} else if (mxl_hostapd_config_fill(conf, bss, buf, pos, line)) {
 #endif /* CONFIG_VENDOR_MXL */
diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index 50d308ab2..7de89162a 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -5371,6 +5371,104 @@ static int hostapd_ctrl_iface_cellular_pref_set(struct hostapd_data *hapd, char
 
 #endif /* CONFIG_MBO */
 
+static int hostapd_ctrl_iface_get_he_phy_channel_width_set(struct hostapd_data *hapd, const char *cmd, char *reply, size_t reply_len)
+{
+	int i, ret, len = 0;
+	struct sta_info *sta = NULL;
+	u8 sta_mac[ETH_ALEN];
+
+	if (hwaddr_aton(cmd, sta_mac)) {
+		ret = sprintf_s(reply, reply_len, "CTRL: GET_HE_PHY_CHANNEL_WIDTH_SET - Incorrect MAC address passed\n");
+		if (ret <= 0) {
+			wpa_printf(MSG_ERROR, "%s: sprintf_s error %d", __func__, ret);
+			return 0;
+		}
+		return ret;
+	}
+
+	for (i = 0; i < hapd->iface->num_bss; i++) {
+		sta = ap_get_sta(hapd->iface->bss[i], sta_mac);
+
+		if (sta)
+			 break;
+	}
+
+	if (!sta) {
+		ret = sprintf_s(reply, reply_len, "CTRL: GET_HE_PHY_CHANNEL_WIDTH_SET - STA doesn't exist\n");
+		if (ret <= 0) {
+			wpa_printf(MSG_ERROR, "%s: sprintf_s error %d", __func__, ret);
+			return 0;
+		}
+		return ret;
+	}
+
+	if (!sta->last_assoc_req || !sta->last_assoc_req_len) {
+		ret = sprintf_s(reply, reply_len, "CTRL: GET_HE_PHY_CHANNEL_WIDTH_SET - STA doesn't have last assoc req\n");
+		if (ret <= 0) {
+			wpa_printf(MSG_ERROR, "%s: sprintf_s error %d", __func__, ret);
+			return 0;
+		}
+		return ret;
+	}
+
+	if ((NULL == sta->he_capab) || (sta->he_capab_len < 1)) {
+		ret = sprintf_s(reply, reply_len, "CTRL: GET_HE_PHY_CHANNEL_WIDTH_SET - STA doesn't have HE elements in assoc req\n");
+		if (ret <= 0 ) {
+			wpa_printf(MSG_ERROR, "%s: sprintf_s error %d", __func__, ret);
+			return 0;
+		}
+		return ret;
+	}
+
+	struct ieee80211_he_capabilities *he_caps = (struct ieee80211_he_capabilities *)sta->he_capab;
+
+	ret = sprintf_s(reply + len, reply_len - len, "he_phy_chanwidth_set=20MHz");
+	if (ret <= 0)
+		return len;
+	len += ret;
+
+#define HE_PHYCAP_CAP0_IDX 0
+#define HE_PHY_CAP0_CHANNEL_WIDTH_SET_B0 (u8) BIT(1)
+#define HE_PHY_CAP0_CHANNEL_WIDTH_SET_B1 (u8) BIT(2)
+#define HE_PHY_CAP0_CHANNEL_WIDTH_SET_B2 (u8) BIT(3)
+#define HE_PHY_CAP0_CHANNEL_WIDTH_SET_B3 (u8) BIT(4)
+
+	if(he_caps->he_phy_capab_info[HE_PHYCAP_CAP0_IDX] & HE_PHY_CAP0_CHANNEL_WIDTH_SET_B0) {
+			ret = sprintf_s(reply + len, reply_len - len, ",40MHz");
+			if (ret <= 0)
+				return len;
+			len += ret;
+	}
+
+	if(he_caps->he_phy_capab_info[HE_PHYCAP_CAP0_IDX] & HE_PHY_CAP0_CHANNEL_WIDTH_SET_B1) {
+			ret = sprintf_s(reply + len, reply_len - len, ",80MHz");
+			if (ret <= 0)
+				return len;
+			len += ret;
+	}
+
+	if(he_caps->he_phy_capab_info[HE_PHYCAP_CAP0_IDX] & HE_PHY_CAP0_CHANNEL_WIDTH_SET_B2) {
+			ret = sprintf_s(reply + len, reply_len - len, ",160MHz");
+			if (ret <= 0)
+				return len;
+			len += ret;
+	}
+
+	if(he_caps->he_phy_capab_info[HE_PHYCAP_CAP0_IDX] & HE_PHY_CAP0_CHANNEL_WIDTH_SET_B3) {
+			ret = sprintf_s(reply + len, reply_len - len, ",80+80MHz");
+			if (ret <= 0)
+				return len;
+			len += ret;
+	}
+
+	ret = sprintf_s(reply + len, reply_len - len, "\n");
+	if (ret <= 0)
+		return len;
+	len += ret;
+
+	return len;
+}
+
 static int hostapd_ctrl_iface_receive_process(struct hostapd_data *hapd,
 					      char *buf, char *reply,
 					      int reply_size,
@@ -6022,6 +6120,9 @@ static int hostapd_ctrl_iface_receive_process(struct hostapd_data *hapd,
 		if (hostapd_ctrl_iface_cellular_pref_set(hapd, buf + 18))
 			reply_len = -1;
 #endif /* CONFIG_MBO */
+	} else if (os_strncmp(buf, "GET_HE_PHY_CHANNEL_WIDTH_SET ", sizeof("GET_HE_PHY_CHANNEL_WIDTH_SET ") - 1) == 0) {
+		reply_len = hostapd_ctrl_iface_get_he_phy_channel_width_set(hapd,
+				buf + sizeof("GET_HE_PHY_CHANNEL_WIDTH_SET ") - 1, reply, reply_size);
 	} else {
 		os_memcpy(reply, "UNKNOWN COMMAND\n", 16);
 		reply_len = 16;
diff --git a/hostapd/hostapd_cli.c b/hostapd/hostapd_cli.c
index e4968223c..9ab0ccdca 100644
--- a/hostapd/hostapd_cli.c
+++ b/hostapd/hostapd_cli.c
@@ -2216,6 +2216,26 @@ static int hostapd_cli_cmd_cellular_pref_set(struct wpa_ctrl *ctrl, int argc, ch
 }
 #endif /* CONFIG_MBO */
 
+static int hostapd_cli_cmd_get_he_phy_channel_width_set (struct wpa_ctrl *ctrl, int argc, char *argv[])
+{
+	char cmd[64];
+	int res;
+
+	if (argc != 1) {
+		printf("Invalid 'get_he_phy_channel_width_set' command: needs one argument:\n"
+				"- STA MAC address from which to get HE PHY Channel Width Set field\n");
+		return -1;
+	}
+
+	res = sprintf_s(cmd, sizeof(cmd), "GET_HE_PHY_CHANNEL_WIDTH_SET %s", argv[0]);
+	if (res <= 0) {
+		printf("%s: sprintf_s error %d", __func__, res);
+		return -1;
+	}
+
+	return wpa_ctrl_command(ctrl, cmd);
+}
+
 struct hostapd_cli_cmd {
 	const char *cmd;
 	int (*handler)(struct wpa_ctrl *ctrl, int argc, char *argv[]);
@@ -2501,6 +2521,8 @@ static const struct hostapd_cli_cmd hostapd_cli_commands[] = {
 	{ "cellular_pref_set", hostapd_cli_cmd_cellular_pref_set, NULL,
 	  " = set cellular preference"},
 #endif /* CONFIG_MBO */
+	{ "get_he_phy_channel_width_set", hostapd_cli_cmd_get_he_phy_channel_width_set, NULL,
+	  "<MAC addr> = get HE PHY Channel Width Set field for specified STA" },
 	{ NULL, NULL, NULL, NULL }
 };
 
-- 
2.43.0

