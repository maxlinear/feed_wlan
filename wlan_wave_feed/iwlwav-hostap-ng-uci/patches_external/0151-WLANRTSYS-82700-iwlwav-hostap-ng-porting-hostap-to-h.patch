From fa8b0f5bfdedbd58a34700da2a7e693b4dde0313 Mon Sep 17 00:00:00 2001
From: rmunjewar <rmunjewar@maxlinear.com>
Date: Thu, 27 Jun 2024 17:09:49 +0530
Subject: [PATCH] WLANRTSYS-82700 : iwlwav-hostap-ng : porting hostap to
 hostap-ng

Porting changes for commit
aa6516b7e5e	WLANRTSYS-63910 : iwlwav-hostap : ACS : 6GHz interface goes down after hitting
		mtlk0(_wave_core_driver_warning_detection_ind_handle:11606):
		WHM : Warning Raised : ID : 53 : Layer : 1

FIXUP for 	WLANRTSYS-82700	[AFC] Porting AFC/ACS changes from Legacy Hostap to Hostap NG
Signed-Off-By : Rushabh Munjewar <rmunjewar@maxlinear.com>
---
 src/drivers/driver_nl80211_event.c |  8 ++++++
 src/drivers/driver_nl80211_scan.c  |  6 +++++
 src/drivers/mxl_driver_nl80211.c   | 40 ++++++++++++++++++++++++++++++
 src/drivers/mxl_driver_nl80211.h   |  2 ++
 wpa_supplicant/Makefile            |  1 +
 5 files changed, 57 insertions(+)

diff --git a/src/drivers/driver_nl80211_event.c b/src/drivers/driver_nl80211_event.c
index 4e035fe82..99471f62b 100644
--- a/src/drivers/driver_nl80211_event.c
+++ b/src/drivers/driver_nl80211_event.c
@@ -4106,6 +4106,10 @@ static void do_process_drv_event(struct i802_bss *bss, int cmd,
 		if (drv->last_scan_cmd == NL80211_CMD_TRIGGER_SCAN) {
 			eloop_cancel_timeout(wpa_driver_nl80211_scan_timeout,
 					     drv, drv->ctx);
+#ifdef CONFIG_DRIVER_NL80211_MXL
+			eloop_cancel_timeout(mxl_wpa_driver_nl80211_scan_abort_timeout,
+					     drv, drv->ctx);
+#endif /* CONFIG_DRIVER_NL80211_MXL */
 			drv->last_scan_cmd = 0;
 		} else {
 			external_scan_event = 1;
@@ -4129,6 +4133,10 @@ static void do_process_drv_event(struct i802_bss *bss, int cmd,
 			 */
 			eloop_cancel_timeout(wpa_driver_nl80211_scan_timeout,
 					     drv, drv->ctx);
+#ifdef CONFIG_DRIVER_NL80211_MXL
+			eloop_cancel_timeout(mxl_wpa_driver_nl80211_scan_abort_timeout,
+					     drv, drv->ctx);
+#endif /* CONFIG_DRIVER_NL80211_MXL */
 			drv->last_scan_cmd = 0;
 		} else {
 			external_scan_event = 1;
diff --git a/src/drivers/driver_nl80211_scan.c b/src/drivers/driver_nl80211_scan.c
index 736db6406..a42fd5d93 100644
--- a/src/drivers/driver_nl80211_scan.c
+++ b/src/drivers/driver_nl80211_scan.c
@@ -20,6 +20,9 @@
 #include "common/qca-vendor.h"
 #include "driver_nl80211.h"
 
+#ifdef CONFIG_VENDOR_MXL
+#include "mxl_driver_nl80211.h"
+#endif /* CONFIG_VENDOR_MXL */
 
 #define MAX_NL80211_NOISE_FREQS 100
 
@@ -1088,6 +1091,9 @@ int wpa_driver_nl80211_abort_scan(void *priv, u64 scan_cookie)
 	if (drv->scan_vendor_cmd_avail && scan_cookie)
 		return nl80211_abort_vendor_scan(drv, scan_cookie);
 #endif /* CONFIG_DRIVER_NL80211_QCA */
+#ifdef CONFIG_DRIVER_NL80211_MXL
+	return mxl_nl80211_abort_scan(bss);
+#endif /* CONFIG_DRIVER_NL80211_MXL */
 	return nl80211_abort_scan(bss);
 }
 
diff --git a/src/drivers/mxl_driver_nl80211.c b/src/drivers/mxl_driver_nl80211.c
index f81308538..5e5771b83 100644
--- a/src/drivers/mxl_driver_nl80211.c
+++ b/src/drivers/mxl_driver_nl80211.c
@@ -17,9 +17,49 @@
 #include "utils/common.h"
 #include "driver_nl80211.h"
 #include "driver.h"
+#include "eloop.h"
 #include "mxl_driver_nl80211.h"
 #include "mxl_driver.h"
 
+/**
+ * mxl_wpa_driver_nl80211_scan_abort_timeout - Scan timeout to report scan abortion
+ * @eloop_ctx: Driver private data
+ * @timeout_ctx: ctx argument given to wpa_driver_nl80211_init()
+ *
+ * This function can be used as registered timeout when aborting a scan to
+ * generate a scan abort complete event if the driver does not report this.
+ */
+void mxl_wpa_driver_nl80211_scan_abort_timeout(void *eloop_ctx, void *timeout_ctx)
+{
+	(void)eloop_ctx;
+	wpa_printf(MSG_DEBUG, "nl80211: Scan Abort timeout");
+	wpa_supplicant_event(timeout_ctx, EVENT_SCAN_RESULTS, NULL);
+}
+
+int mxl_nl80211_abort_scan(struct i802_bss *bss)
+{
+	int ret;
+	struct nl_msg *msg;
+	struct wpa_driver_nl80211_data *drv = bss->drv;
+	int timeout = 10; /* seconds */
+
+	wpa_printf(MSG_DEBUG, "nl80211: Abort scan");
+	msg = nl80211_cmd_msg(bss, 0, NL80211_CMD_ABORT_SCAN);
+	ret = send_and_recv_msgs(drv, msg, NULL, NULL, NULL, NULL, NULL);
+	if (ret) {
+		wpa_printf(MSG_DEBUG, "nl80211: Abort scan failed: ret=%d (%s)",
+			   ret, strerror(-ret));
+		return ret;
+	}
+
+	wpa_printf(MSG_DEBUG, "Scan abort requested (ret=%d) - request timeout %d "
+		   "seconds", ret, timeout);
+	eloop_cancel_timeout(mxl_wpa_driver_nl80211_scan_abort_timeout, drv, drv->ctx);
+	eloop_register_timeout(timeout, 0, mxl_wpa_driver_nl80211_scan_abort_timeout,
+		   drv, drv->ctx);
+	return ret;
+}
+
 static int nl80211_put_antenna_params(struct nl_msg *msg, u32 tx_ant, u32 rx_ant)
 {
 	wpa_printf(MSG_DEBUG, "  * TX 0x%x", tx_ant);
diff --git a/src/drivers/mxl_driver_nl80211.h b/src/drivers/mxl_driver_nl80211.h
index 098134ad5..ab6dfcee4 100644
--- a/src/drivers/mxl_driver_nl80211.h
+++ b/src/drivers/mxl_driver_nl80211.h
@@ -23,10 +23,12 @@ struct i802_bss;
 	C2S(NL80211_CMD_SET_DFS_STATE) \
 	C2S(NL80211_CMD_ML_CHAN_SWITCH_DONE_NOTIFY)
 
+int mxl_nl80211_abort_scan(struct i802_bss *bss);
 int mxl_nl80211_set_channel_dfs_state(void *priv, enum nl80211_dfs_state dfs_state,
 				      int freq, int dfs_time, int dfs_debug);
 int mxl_nl80211_set_antenna(void *priv, u32 tx_ant, u32 rx_ant);
 void mxl_nl80211_update_capa(struct nlattr **tb, struct wpa_driver_capa *capa);
 void mxl_phy_info_eml_capa(struct hostapd_hw_modes *mode, struct nlattr *eml_capa);
 int mxl_do_process_drv_event(struct i802_bss *bss, int cmd, struct nlattr **tb);
+void mxl_wpa_driver_nl80211_scan_abort_timeout(void *eloop_ctx, void *timeout_ctx);
 #endif /* MXL_DRIVER_NL80211_H */
diff --git a/wpa_supplicant/Makefile b/wpa_supplicant/Makefile
index 09826803a..e40556b41 100644
--- a/wpa_supplicant/Makefile
+++ b/wpa_supplicant/Makefile
@@ -1971,6 +1971,7 @@ CFLAGS += -DCONFIG_VENDOR_MXL_BUILD_FOR_SUPPLICANT
 OBJS += ../src/common/mxl_ieee802_11_common.o
 OBJS += mxl_supplicant.o
 OBJS += mxl_events.o
+OBJS += ../src/drivers/mxl_driver_nl80211.o
 endif
 
 dynamic_eap_methods: $(EAPDYN)
-- 
2.43.0

