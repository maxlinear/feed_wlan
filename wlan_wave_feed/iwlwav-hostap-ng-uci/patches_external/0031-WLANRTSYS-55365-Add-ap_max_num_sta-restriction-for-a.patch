From cc2e1626e24865cc2e76f4fe68f20aeb396d5dce Mon Sep 17 00:00:00 2001
From: Jurijs Soloveckis <jsoloveckis@maxlinear.com>
Date: Fri, 19 May 2023 14:41:17 +0200
Subject: [PATCH] WLANRTSYS-55365: Add ap_max_num_sta restriction for all VAPs

---
 hostapd/config_file.c | 15 +++++++++++++
 hostapd/main.c        |  4 ++++
 src/ap/ap_config.c    | 20 +++++++++++++++++
 src/ap/ap_config.h    |  2 ++
 src/ap/sta_info.c     | 52 +++++++++++++++++++++++++++++++++++++++----
 5 files changed, 89 insertions(+), 4 deletions(-)

diff --git a/hostapd/config_file.c b/hostapd/config_file.c
index 564866752..920dcfc5c 100644
--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -3037,6 +3037,21 @@ static int hostapd_config_fill(struct hostapd_config *conf,
 				   line, bss->max_num_sta, MAX_STA_COUNT);
 			return 1;
 		}
+	} else if (os_strcmp(buf, "ap_max_num_sta") == 0) {
+		int val = atoi(pos);
+		if (!IS_VALID_RANGE(val, 0, MAX_STA_COUNT)) {
+			wpa_printf(MSG_ERROR, "Line %d: Invalid ap_max_num_sta=%d; allowed range 0..%d",
+				    line, val, MAX_STA_COUNT);
+			return 1;
+		}
+		conf->ap_max_num_sta = val;
+	} else if (os_strcmp(buf, "num_res_sta") == 0) {
+		bss->num_res_sta = atoi(pos);
+		if (bss->num_res_sta < 0) {
+			wpa_printf(MSG_ERROR, "Line %d: Invalid num_res_sta=%d; allowed range 0..max_num_sta",
+				   line, bss->num_res_sta);
+			return 1;
+		}
 	} else if (os_strcmp(buf, "wpa") == 0) {
 		bss->wpa = atoi(pos);
 	} else if (os_strcmp(buf, "extended_key_id") == 0) {
diff --git a/hostapd/main.c b/hostapd/main.c
index 76a369c5a..72fc583c5 100644
--- a/hostapd/main.c
+++ b/hostapd/main.c
@@ -316,6 +316,10 @@ setup_mld:
 #endif /* CONFIG_VENDOR_MXL */
 
 		iface->probe_resp_offloads = capa.probe_resp_offloads;
+		hapd->iconf->ap_max_num_sta = MIN(capa.max_stations, hapd->iconf->ap_max_num_sta);
+		for (i = 0; i < hapd->iface->num_bss; i++) {
+			iface->conf->bss[i]->max_num_sta = MIN(capa.max_stations, iface->conf->bss[i]->max_num_sta);
+		}
 		/*
 		 * Use default extended capa values from per-radio information
 		 */
diff --git a/src/ap/ap_config.c b/src/ap/ap_config.c
index ac4827bc9..63cb6841d 100644
--- a/src/ap/ap_config.c
+++ b/src/ap/ap_config.c
@@ -87,6 +87,7 @@ void hostapd_config_defaults_bss(struct hostapd_bss_config *bss)
 	bss->rsn_pairwise = 0;
 
 	bss->max_num_sta = MAX_STA_COUNT;
+	bss->num_res_sta = 0;
 
 	bss->dtim_period = 2;
 
@@ -251,6 +252,8 @@ struct hostapd_config * hostapd_config_defaults(void)
 	/* Set to invalid value means do not add Power Constraint IE */
 	conf->local_pwr_constraint = -1;
 
+	conf->ap_max_num_sta = MAX_STA_COUNT;
+
 	conf->wmm_ac_params[0] = ac_be;
 	conf->wmm_ac_params[1] = ac_bk;
 	conf->wmm_ac_params[2] = ac_vi;
@@ -1538,6 +1541,7 @@ static int hostapd_config_check_cw(struct hostapd_config *conf, int queue)
 int hostapd_config_check(struct hostapd_config *conf, int full_config)
 {
 	size_t i;
+	int ap_max_num_sta;
 
 	if (full_config && is_6ghz_op_class(conf->op_class) &&
 	    !conf->hw_mode_set) {
@@ -1611,6 +1615,22 @@ int hostapd_config_check(struct hostapd_config *conf, int full_config)
 				conf->mbssid_aid_offset = MULTIBSS_AID_OFFSET;
 	}
 
+	ap_max_num_sta = conf->ap_max_num_sta;
+	for (i = 0; i < conf->num_bss; i++) {
+		if (conf->bss[i]->max_num_sta > conf->ap_max_num_sta) {
+			wpa_printf(MSG_DEBUG, "max_num_sta (%d) for BSS#%zu is greater than "
+				   "ap_max_num_sta (%d) for radio. Hence resetting max_num_sta", conf->bss[i]->max_num_sta, i, conf->ap_max_num_sta);
+			conf->bss[i]->max_num_sta = conf->ap_max_num_sta;
+		}
+		ap_max_num_sta -= conf->bss[i]->num_res_sta;
+	}
+
+	if (ap_max_num_sta < 0) {
+		wpa_printf(MSG_ERROR, "Summ of num_res_sta for all BSS is greater than ap_max_num_sta (%d) ",
+			   conf->ap_max_num_sta);
+		return -1;
+	}
+
 	return 0;
 }
 
diff --git a/src/ap/ap_config.h b/src/ap/ap_config.h
index 4c3bb772a..1f7ae595c 100644
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -332,6 +332,7 @@ struct hostapd_bss_config {
 	unsigned int logger_stdout; /* module bitfield */
 
 	int max_num_sta; /* maximum number of STAs in station table */
+	int num_res_sta; /* number of reserved STAs in the BSS */
 
 	int dtim_period;
 	unsigned int bss_load_update_period;
@@ -1096,6 +1097,7 @@ struct hostapd_config {
 	int enable_edmg;
 	u8 edmg_channel;
 	u8 acs;
+	int ap_max_num_sta;  /*maximum number of stations per-radio */
 	struct wpa_freq_range_list acs_ch_list;
 	struct wpa_freq_range_list acs_freq_list;
 	u8 acs_freq_list_present;
diff --git a/src/ap/sta_info.c b/src/ap/sta_info.c
index 5ee17f319..729cdf46c 100644
--- a/src/ap/sta_info.c
+++ b/src/ap/sta_info.c
@@ -736,21 +736,65 @@ void ap_sta_session_warning_timeout(struct hostapd_data *hapd,
 			       hapd, sta);
 }
 
+static int num_sta_get_total(struct hostapd_data *hapd)
+{
+	struct hostapd_iface *iface = hapd->iface;
+	size_t i;
+	int num_of_sta;
+
+	for (i = 0, num_of_sta = 0; i < iface->num_bss; i++) {
+		struct hostapd_data *bss = iface->bss[i];
+		num_of_sta += bss->num_sta;
+	}
+	return num_of_sta;
+}
+
+static int num_res_sta_get_total(struct hostapd_data *hapd)
+{
+	struct hostapd_iface *iface = hapd->iface;
+	size_t i;
+	int num_res_sta;
+
+	for (i = 0, num_res_sta = 0; i < iface->num_bss; i++) {
+		struct hostapd_data *bss = iface->bss[i];
+		num_res_sta += bss->conf->num_res_sta;
+	}
+	return num_res_sta;
+}
 
 struct sta_info * ap_sta_add(struct hostapd_data *hapd, const u8 *addr)
 {
 	struct sta_info *sta;
 	int i;
+	int num_sta_total = num_sta_get_total(hapd);
+	int num_res_sta_total = num_res_sta_get_total(hapd);
+
 
 	sta = ap_get_sta(hapd, addr);
 	if (sta)
 		return sta;
 
 	wpa_printf(MSG_DEBUG, "  New STA");
-	if (hapd->num_sta >= hapd->conf->max_num_sta) {
-		/* FIX: might try to remove some old STAs first? */
-		wpa_printf(MSG_DEBUG, "no more room for new STAs (%d/%d)",
-			   hapd->num_sta, hapd->conf->max_num_sta);
+
+	if (hapd->conf->num_res_sta) { /* Number of reserved STAs is set for this BSS */
+		if (hapd->num_sta >= hapd->conf->max_num_sta) {
+			/* FIX: might try to remove some old STAs first? */
+			wpa_printf(MSG_ERROR, "no more room for new STAs (%d/%d)",
+				   hapd->num_sta, hapd->conf->max_num_sta);
+			return NULL;
+		}
+	} else { /* Number of reserved STAs is not set for this BSS */
+		if (hapd->num_sta >= (hapd->conf->max_num_sta - num_res_sta_total)) {
+			wpa_printf(MSG_ERROR, "no more room for new STAs, "
+				   "reserved STAs limit is reached for BSS(%d/%d)",
+				   hapd->num_sta, hapd->conf->max_num_sta - num_res_sta_total);
+			return NULL;
+		}
+	}
+
+	if (num_sta_total >= hapd->iconf->ap_max_num_sta) {
+		wpa_printf(MSG_ERROR, "no more room for new STAs, Radio limit reached (%d/%d)",
+			   num_sta_total, hapd->iconf->ap_max_num_sta);
 		return NULL;
 	}
 
-- 
2.43.0

