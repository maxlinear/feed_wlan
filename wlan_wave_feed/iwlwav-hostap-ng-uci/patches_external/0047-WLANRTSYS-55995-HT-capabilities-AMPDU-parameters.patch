From d0323bfba52d9a03fe1f6865260759e0f20d6c10 Mon Sep 17 00:00:00 2001
From: Dmitrijs Martinovs <dmartinovs@maxlinear.com>
Date: Wed, 7 Jun 2023 16:39:09 +0200
Subject: [PATCH] WLANRTSYS-55995: HT capabilities AMPDU parameters

---
 hostapd/config_file.c        | 8 ++++++++
 src/ap/ap_config.h           | 2 ++
 src/ap/ieee802_11_ht.c       | 9 +++++++++
 src/common/ieee802_11_defs.h | 4 ++++
 4 files changed, 23 insertions(+)

diff --git a/hostapd/config_file.c b/hostapd/config_file.c
index 9f17d7a9e..e399d6d56 100644
--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -3812,6 +3812,14 @@ static int hostapd_config_fill(struct hostapd_config *conf,
 		conf->require_ht = atoi(pos);
 	} else if (os_strcmp(buf, "obss_interval") == 0) {
 		conf->obss_interval = atoi(pos);
+	} else if (os_strcmp(buf, "ht_maximum_ampdu_length_exponent") == 0) {
+		conf->ht_cap_ampdu_parameters &= ~HT_CAP_AMPDU_MAXIMUM_AMPDU_LENGTH_EXPONENT;
+		conf->ht_cap_ampdu_parameters |= (atoi(pos) << 0) & HT_CAP_AMPDU_MAXIMUM_AMPDU_LENGTH_EXPONENT;
+		conf->ht_cap_ampdu_parameters_override_mask |= 0x1;
+	} else if (os_strcmp(buf, "ht_minimum_mpdu_start_spacing") == 0) {
+		conf->ht_cap_ampdu_parameters &= ~HT_CAP_AMPDU_MINIMUM_MPDU_START_SPACING;
+		conf->ht_cap_ampdu_parameters |= (atoi(pos) << 2) & HT_CAP_AMPDU_MINIMUM_MPDU_START_SPACING;
+		conf->ht_cap_ampdu_parameters_override_mask |= 0x2;
 #ifdef CONFIG_IEEE80211AC
 	} else if (os_strcmp(buf, "ieee80211ac") == 0) {
 		conf->ieee80211ac = atoi(pos);
diff --git a/src/ap/ap_config.h b/src/ap/ap_config.h
index ba50bbcf4..4360b337a 100644
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -1219,6 +1219,8 @@ struct hostapd_config {
 	u16 ht_capab;
 	int ht_tx_bf_capab_from_hw;
 	u32 ht_tx_bf_capab;
+	u8  ht_cap_ampdu_parameters;
+	u8  ht_cap_ampdu_parameters_override_mask;
 	int ieee80211n;
 	int secondary_channel;
 	bool secondary_channel_set;
diff --git a/src/ap/ieee802_11_ht.c b/src/ap/ieee802_11_ht.c
index 8617f96a4..0eeeae37b 100644
--- a/src/ap/ieee802_11_ht.c
+++ b/src/ap/ieee802_11_ht.c
@@ -40,6 +40,15 @@ u8 * hostapd_eid_ht_capabilities(struct hostapd_data *hapd, u8 *eid)
 	os_memset(cap, 0, sizeof(*cap));
 	cap->ht_capabilities_info = host_to_le16(hapd->iconf->ht_capab);
 	cap->a_mpdu_params = hapd->iface->current_mode->a_mpdu_params;
+
+	if(hapd->iconf->ht_cap_ampdu_parameters_override_mask & 0x1)
+		cap->a_mpdu_params &= ~(HT_CAP_AMPDU_MAXIMUM_AMPDU_LENGTH_EXPONENT);
+
+	if((hapd->iconf->ht_cap_ampdu_parameters_override_mask >> 1) & 0x1)
+		cap->a_mpdu_params &= ~(HT_CAP_AMPDU_MINIMUM_MPDU_START_SPACING);
+
+	cap->a_mpdu_params |= (hapd->iconf->ht_cap_ampdu_parameters);
+
 	os_memcpy(cap->supported_mcs_set, hapd->iface->current_mode->mcs_set,
 		  16);
 	/* tx_bf_capability_info */
diff --git a/src/common/ieee802_11_defs.h b/src/common/ieee802_11_defs.h
index 52a79adc7..3fd701ce5 100644
--- a/src/common/ieee802_11_defs.h
+++ b/src/common/ieee802_11_defs.h
@@ -1257,6 +1257,10 @@ struct ieee80211_ampe_ie {
 #define HT_CAP_INFO_40MHZ_INTOLERANT		((u16) BIT(14))
 #define HT_CAP_INFO_LSIG_TXOP_PROTECT_SUPPORT	((u16) BIT(15))
 
+/*  A-MPDU Parameters field of HT Capabilities element */
+#define HT_CAP_AMPDU_MAXIMUM_AMPDU_LENGTH_EXPONENT	((u8)(BIT(0) | BIT(1)))
+#define HT_CAP_AMPDU_MINIMUM_MPDU_START_SPACING 	((u8)(BIT(2) | BIT(3) | BIT(4)))
+
 /* HT Extended Capabilities field within HT Capabilities element */
 #define EXT_HT_CAP_INFO_PCO			((u16) BIT(0))
 #define EXT_HT_CAP_INFO_PCO_TRANS_TIME_MASK	((u16) (BIT(1) | BIT(2)))
-- 
2.43.0

