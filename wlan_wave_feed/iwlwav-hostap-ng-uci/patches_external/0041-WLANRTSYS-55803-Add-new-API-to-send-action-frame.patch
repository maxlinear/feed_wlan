From 6c0cf9911fbc486a2e27094ec05795b343bc2f50 Mon Sep 17 00:00:00 2001
From: Jurijs Soloveckis <jsoloveckis@maxlinear.com>
Date: Fri, 2 Jun 2023 08:15:52 +0200
Subject: [PATCH] WLANRTSYS-55803: Add new API to send action frame

---
 hostapd/ctrl_iface.c  | 70 +++++++++++++++++++++++++++++++++++++++++++
 hostapd/hostapd_cli.c |  7 +++++
 2 files changed, 77 insertions(+)

diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index 0de522b6c..fe51d9868 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -5109,6 +5109,73 @@ static int hostapd_ctrl_iface_get_sta_wpa_psk(struct hostapd_data *hapd, char *c
 			 key_id, wpa_passphrase);
 }
 
+static int hostapd_ctrl_iface_send_action_frame(struct hostapd_data *hapd, char *cmd)
+{
+	u8 addr[ETH_ALEN];
+	unsigned int freq;
+	struct wpabuf *buf;
+	char *tmp;
+	int ret;
+
+	hapd = mxl_get_bss_index(cmd, hapd->iface);
+	if (!hapd) {
+		wpa_printf(MSG_ERROR,
+				"CTRL: SEND_ACTION_FRAME - there is no iface with the given name");
+		return -1;
+	}
+	cmd = os_strchr(cmd, ' ');
+	if (!cmd) {
+		wpa_printf(MSG_ERROR,
+				"CTRL: SEND_ACTION_FRAME - mac address is missing");
+		return -1;
+	}
+	cmd++;
+
+	if (hwaddr_aton(cmd, addr)) {
+		wpa_printf(MSG_ERROR,
+				"CTRL: SEND_ACTION_FRAME - invalid peer mac address");
+		return -1;
+	}
+
+	cmd = os_strchr(cmd, ' ');
+	if (cmd == NULL) {
+		wpa_printf(MSG_ERROR, "CTRL: SEND_ACTION_FRAME - Freq is missing");
+		return -1;
+	}
+	cmd++;
+	freq = strtoul(cmd, &tmp, 10);
+	if (freq != (unsigned int)hapd->iface->freq) {
+		wpa_printf(MSG_DEBUG,
+				"CTRL: SEND_ACTION_FRAME - requested Off channel");
+	}
+
+	tmp = os_strstr(cmd, "frame=");
+	if (tmp == NULL) {
+		wpa_printf(MSG_ERROR,
+				"CTRL: SEND_ACTION_FRAME - Frame buffer is missing");
+		return -1;
+	}
+	cmd = os_strchr(cmd, ' ');
+	if (cmd)
+		*cmd++ = '\0';
+
+	buf = wpabuf_parse_bin(tmp + 6);
+	if (!buf) {
+		wpa_printf(MSG_ERROR,
+			   "CTRL: SEND_ACTION_FRAME: Bad frame buffer");
+		return -1;
+	}
+
+	wpa_printf(MSG_INFO, "Send action frame to " MACSTR, MAC2STR(addr));
+
+	ret = hostapd_drv_send_action(hapd, freq, 0, addr,
+				      wpabuf_head(buf), wpabuf_len(buf));
+
+	wpabuf_free(buf);
+
+	return ret;
+}
+
 static int hostapd_ctrl_iface_receive_process(struct hostapd_data *hapd,
 					      char *buf, char *reply,
 					      int reply_size,
@@ -5746,6 +5813,9 @@ static int hostapd_ctrl_iface_receive_process(struct hostapd_data *hapd,
 #endif /* CONFIG_IEEE80211AX */
 	} else if (os_strncmp(buf, "GET_STA_WPA_PSK ", 16) == 0) {
 		reply_len = hostapd_ctrl_iface_get_sta_wpa_psk(hapd, buf + 16, reply, reply_size);
+	} else if (os_strncmp(buf, "SEND_ACTION_FRAME ", sizeof("SEND_ACTION_FRAME ") - 1) == 0) {
+		if (hostapd_ctrl_iface_send_action_frame(hapd, buf + sizeof("SEND_ACTION_FRAME ") - 1))
+			reply_len = -1;
 	} else {
 		os_memcpy(reply, "UNKNOWN COMMAND\n", 16);
 		reply_len = 16;
diff --git a/hostapd/hostapd_cli.c b/hostapd/hostapd_cli.c
index 1bf6b5056..367b282a4 100644
--- a/hostapd/hostapd_cli.c
+++ b/hostapd/hostapd_cli.c
@@ -2152,6 +2152,11 @@ static int hostapd_cli_cmd_get_sta_wpa_psk(struct wpa_ctrl *ctrl, int argc,
 	return wpa_ctrl_command(ctrl, cmd);
 }
 
+static int hostapd_cli_cmd_send_action_frame(struct wpa_ctrl *ctrl, int argc, char *argv[])
+{
+	return hostapd_cli_cmd(ctrl, "SEND_ACTION_FRAME", 4, argc, argv);
+}
+
 struct hostapd_cli_cmd {
 	const char *cmd;
 	int (*handler)(struct wpa_ctrl *ctrl, int argc, char *argv[]);
@@ -2427,6 +2432,8 @@ static const struct hostapd_cli_cmd hostapd_cli_commands[] = {
 	  "supported)" },
 	{ "get_sta_wpa_psk", hostapd_cli_cmd_get_sta_wpa_psk, NULL,
 	  "= get STAs key ID and passphrase if set in wpa_psk_file" },
+	{ "send_action_frame", hostapd_cli_cmd_send_action_frame, NULL,
+	  "<bss> <mac_addr> <freq> frame=<frame_buf>" },
 	{ NULL, NULL, NULL, NULL }
 };
 
-- 
2.43.0

