From f5bc6e96358c8a97116b82496f8910972c374d1a Mon Sep 17 00:00:00 2001
From: Vasudevan Raman <vraman@maxlinear.com>
Date: Tue, 30 Jul 2024 22:00:53 +0800
Subject: [PATCH] WLANRTSYS-80984 Cancel
 hostapd_dfs_channel_state_file_update_eloop timer during hostapd cleanup.

Issue :
Hostapd crash during CAC while enabling the config "dfs_ch_state_file" (which is used for maintaing the channel state in /opt/intel/wave/conf/ch_dfs_state.db during channel switch and radar event to skip CAC for ETSI domain).
Root Cause :
With the config "dfs_ch_state_file" enabled hostapd_dfs_channel_state_file_update_eloop timer is registered to maintain the state and NOP_time of channel.
On triggering channel switch UCI command, hostapd cleanup done during wifi down frees iface->conf and makes NULL.
With "dfs_ch_state_file" config enabled, a timer gets registered as part of this. The timer registered wasn't cancelled in hostapd cleanup which occurs during wifi down post channel switch UCI command thus hostapd_dfs_channel_state_file_update_eloop timer on trying to access iface->conf which is NULL post cleanup caused hostapd segfault.
Fix :
Added changes to cancel the timer in hostapd cleanup flow.

FIXUP to WLANRTSYS-50839: MXL generic DFS implementation
---
 src/ap/mxl_dfs_file.c     | 2 +-
 src/ap/mxl_dfs_file.h     | 1 +
 src/ap/mxl_sub_band_dfs.c | 4 ++++
 3 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/ap/mxl_dfs_file.c b/src/ap/mxl_dfs_file.c
index 55190c9db..cbb8fbe71 100644
--- a/src/ap/mxl_dfs_file.c
+++ b/src/ap/mxl_dfs_file.c
@@ -62,7 +62,7 @@ static int mxl_hostapd_dfs_channel_state_file_update(struct hostapd_iface *iface
 	return keep_going;
 }
 
-static void mxl_hostapd_dfs_channel_state_file_update_eloop(void *eloop_ctx, void *timeout_ctx)
+void mxl_hostapd_dfs_channel_state_file_update_eloop(void *eloop_ctx, void *timeout_ctx)
 {
 	struct hostapd_iface *iface = eloop_ctx;
 	if (mxl_hostapd_dfs_channel_state_file_update(iface, 1))
diff --git a/src/ap/mxl_dfs_file.h b/src/ap/mxl_dfs_file.h
index 35fb5f578..e830a96eb 100644
--- a/src/ap/mxl_dfs_file.h
+++ b/src/ap/mxl_dfs_file.h
@@ -17,5 +17,6 @@
 void mxl_hostapd_dfs_file_update(struct hostapd_iface *iface, bool only_when_etsi);
 void mxl_hostapd_dfs_file_radar(struct hostapd_iface *iface);
 int mxl_hostapd_send_dfs_channel_state(struct hostapd_iface *iface);
+void mxl_hostapd_dfs_channel_state_file_update_eloop(void *eloop_ctx, void *timeout_ctx);
 
 #endif /* MXL_DFS_FILE_H */
diff --git a/src/ap/mxl_sub_band_dfs.c b/src/ap/mxl_sub_band_dfs.c
index 102f47615..ef6cfddf5 100644
--- a/src/ap/mxl_sub_band_dfs.c
+++ b/src/ap/mxl_sub_band_dfs.c
@@ -21,6 +21,7 @@
 #include "mxl_dfs_common.h"
 #include "mxl_sub_band_dfs.h"
 #include "drivers/mxl_nl80211.h"
+#include "mxl_dfs_file.h"
 
 #define NUM_MAX_CHANS_IN_CHANDEF 8
 
@@ -611,6 +612,9 @@ void mxl_hostapd_dfs_history_deinit(struct hostapd_iface *iface)
 {
 	hostapd_dfs_history_t *entry;
 
+	if (iface->conf && iface->conf->mxl_conf.dfs_channels_state_file)
+		eloop_cancel_timeout(mxl_hostapd_dfs_channel_state_file_update_eloop, iface, NULL);
+
 	if (!iface->mxl_iface.dfs_hist_entry_cnt)
 		return;
 
-- 
2.43.0

