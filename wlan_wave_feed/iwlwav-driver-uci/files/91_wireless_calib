#!/bin/sh

fetch_partition ()
{
	local partname flashtype partnum
	if which partx >&- 2>&-; then
		partnum=`partx -s -o NR,NAME /dev/mmcblk0 | grep calibration_a |  awk '{ print $1 }' 2>&-`
	fi
	if [ $partnum ]; then
		partname=`cat /proc/partitions | grep "p$partnum" | awk '{ print $4 }'`
		flashtype="emmc"
	else
		partname=`grep -w calibration /proc/mtd|cut -d: -f1`
		if [ $partname ]; then
			flashtype="nand"
		else
			echo "Unknown FlashType"
			return 1
		fi
	fi
	echo "$partname:$flashtype"
	return 0
}

initwireless_calibration() {
	mkdir -p /tmp/wlanconfig
	read_img wlanconfig /tmp/wlanconfig/wlanconfig_cal_files.tar.gz &> /dev/null
	ret=$?
	if [ $ret -eq 0 ]; then
		tar xzf /tmp/wlanconfig/wlanconfig_cal_files.tar.gz -C /tmp/wlanconfig/
	else
		local err=0
		local partdetails partname flashtype
		partdetails=$(fetch_partition)
		err=$?
		if [ $err -ne 0 ]; then
			return $err
		fi
		partname=`echo $partdetails | cut -d\: -f1`
		flashtype=`echo $partdetails | cut -d\: -f2`

		if [ -n "$partname" ]; then
			rm -rf /tmp/_calibration
			mkdir -p /tmp/_calibration
			if [ "$flashtype" = "nand" ]; then
				cd /tmp/_calibration && {
					nanddump -q /dev/$partname > calibration.gz
					tar xzf calibration.gz
					[ -e $1.gz ] && mv -f $1.gz "$2";
					cd - >&-;
				}
			elif [ "$flashtype" == "emmc" ]; then
				if [ ! -e "/dev/$partname " ]; then
					major_value=$(cat /sys/class/mmc_host/mmc0/mmc0:0001/block/mmcblk0/$partname/uevent | grep MAJOR | cut -d '=' -f2)
					minor_value=$(cat /sys/class/mmc_host/mmc0/mmc0:0001/block/mmcblk0/$partname/uevent | grep MINOR | cut -d '=' -f2)
					mknod /dev/$partname b $major_value $minor_value > /dev/null 2>&1
				fi 
				mount -t ext2 /dev/$partname /tmp/_calibration &> /dev/null && {
					cp -rf /tmp/_calibration/cal* /tmp/wlanconfig/
					umount /tmp/_calibration
					rm -rf /tmp/_calibration
				} || {
					err=$?
					rm -rf /tmp/_calibration
					return $err
				}
			fi
		fi
	fi

	chown -R nwk:nwk /tmp/wlanconfig
	chmod 550 /tmp/wlanconfig
	chmod 440 /tmp/wlanconfig/*
}

boot_hook_add preinit_main initwireless_calibration
